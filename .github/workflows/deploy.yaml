on:
  push:
    branches:
      - master

jobs:
  build:
    name: Build Docker images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout master
        uses: actions/checkout@master

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: daanvm
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push daanvm.nl-nginx
        id: docker_build_daanvm_nl_nginx
        uses: docker/build-push-action@v2
        with:
          context: ./sites/daanvm.nl
          file: ./sites/daanvm.nl/Dockerfile-nginx
          push: true
          tags: daanvm/daanvm.nl-nginx:latest
      - name: Image digest
        run: echo ${{ steps.docker_build_daanvm_nl_nginx.outputs.digest }}

      - name: Build and push daanvm.nl-php
        id: docker_build_daanvm_nl_php
        uses: docker/build-push-action@v2
        with:
          context: ./sites/daanvm.nl
          file: ./sites/daanvm.nl/Dockerfile-php
          push: true
          tags: daanvm/daanvm.nl-php:latest
      - name: Image digest
        run: echo ${{ steps.docker_build_daanvm_nl_php.outputs.digest }}

      - name: Build and push christelmusic.nl-nginx
        id: docker_build_christelmusic_nl_nginx
        uses: docker/build-push-action@v2
        with:
          context: ./sites/christelmusic.nl
          file: ./sites/christelmusic.nl/Dockerfile-nginx
          push: true
          tags: daanvm/christelmusic.nl-nginx:latest
      - name: Image digest
        run: echo ${{ steps.docker_build_christelmusic_nl_nginx.outputs.digest }}

      - name: Build and push christelmusic.nl-php
        id: docker_build_christelmusic_nl_php
        uses: docker/build-push-action@v2
        with:
          context: ./sites/christelmusic.nl
          file: ./sites/christelmusic.nl/Dockerfile-php
          push: true
          tags: daanvm/christelmusic.nl-php:latest
      - name: Image digest
        run: echo ${{ steps.docker_build_christelmusic_nl_php.outputs.digest }}

  deploy-kubernetes:
    name: Create Kubernetes resources
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout master
        uses: actions/checkout@master

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 k8s-daanvm

      - name: Install helm
        uses: azure/setup-helm@v3

      - name: Set up helm
        run: |
          helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
          helm repo add jetstack https://charts.jetstack.io
          helm repo update

      - name: Install Nginx ingress with helm
        run: helm upgrade --install nginx-ingress ingress-nginx/ingress-nginx --set controller.publishService.enabled=true

      - name: Install cert manager with helm
        run: |
          kubectl create namespace cert-manager --dry-run=client -o yaml | kubectl apply -f -
          helm upgrade --install cert-manager jetstack/cert-manager --namespace cert-manager --version v1.2.0 --set installCRDs=true
          kubectl apply -f ./config/kubernetes/cert-manager-letsencrypt.yaml

      - name: Create kubernetes resources
        run: |
          kubectl apply -f ./config/kubernetes/daanvm.nl.yaml
          kubectl apply -f ./config/kubernetes/christelmusic.nl.yaml
          kubectl apply -f ./config/kubernetes/ingress.yaml

      - name: Get public loadbalancer IP address
        run: kubectl get service nginx-ingress-ingress-nginx-controller -o=jsonpath='{.status.loadBalancer.ingress[*].ip}'

      - name: Deploy new latest version of docker image
        run: |
          kubectl create secret generic ifttt --save-config --dry-run=client --from-literal='key=${{ secrets.IFTTT_KEY }}' -o yaml | kubectl apply -f -
          kubectl rollout restart deployment daanvm-nl
          kubectl rollout restart deployment daanvm-nl-php
          kubectl rollout restart deployment christelmusic-nl
          kubectl rollout restart deployment christelmusic-nl-php
